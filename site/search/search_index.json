{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Activit\u00e9 Python Cette activit\u00e9 a pour objectif la d\u00e9couverte des premi\u00e8res instructions en Python. Nous allons utiliser la tortue (librairie \"Turtle\") pour faire dessiner des figures en Python. A la fin de cette activit\u00e9, vous aurez d\u00e9couvert : l'utilisation d'un outil de d\u00e9veloppement en ligne (Repl.it) les bases du langage Python, la syntaxe comment cr\u00e9er un projet Python comment donner des instructions \u00e0 la tortue ce qu'est une variable la notion de boucle la d\u00e9finition d'une fonction comment passer un param\u00e8tre \u00e0 une fonction >>> D\u00e9marrer","title":"Introduction"},{"location":"#activite-python","text":"Cette activit\u00e9 a pour objectif la d\u00e9couverte des premi\u00e8res instructions en Python. Nous allons utiliser la tortue (librairie \"Turtle\") pour faire dessiner des figures en Python. A la fin de cette activit\u00e9, vous aurez d\u00e9couvert : l'utilisation d'un outil de d\u00e9veloppement en ligne (Repl.it) les bases du langage Python, la syntaxe comment cr\u00e9er un projet Python comment donner des instructions \u00e0 la tortue ce qu'est une variable la notion de boucle la d\u00e9finition d'une fonction comment passer un param\u00e8tre \u00e0 une fonction >>> D\u00e9marrer","title":"Activit\u00e9 Python"},{"location":"boucles/","text":"4. Boucles Pour faire votre carr\u00e9, vous avez d\u00fb r\u00e9p\u00e9ter 4 fois la m\u00eame op\u00e9ration : \"avance de 100 et tourne \u00e0 gauche de 90\u00b0\". Pour simplifier le code, on va cr\u00e9er une boucle : on indique \u00e0 la machine qu'elle va r\u00e9p\u00e9ter n fois la m\u00eame suite d'op\u00e9rations. En Python, comme dans la plupart des langages de programmation, la boucle la plus commune est la boucle \"Pour\", en anglais \"For\". Essayez le code suivant : for _ in range(10): print(\"Hello!\") Dans le cas de notre carr\u00e9, nous aurons ceci : for _ in range(4): franklin.forward(100) franklin.left(90) Description : - \"for\" = d\u00e9but de la boucle \"pour\" - le symbole \"_\" signifie qu'on n'a pas besoin d'utiliser le compteur - range(4) : on utilise un ensemble de 4 \u00e9l\u00e9ments, donc on effectuera 4 tours - notez les \":\" \u00e0 la fin de la ligne - les lignes suivantes sont d\u00e9cal\u00e9es par une indentation : c'est un bloc d'instructions - toutes les lignes d\u00e9cal\u00e9es (indent\u00e9es) seront r\u00e9p\u00e9t\u00e9es dans la boucle. D\u00e8s qu'une ligne n'est plus indent\u00e9e, on sera sorti de la boucle. D\u00e9fi \u00c0 l'aide d'une boucle, cr\u00e9er un triangle \u00e9quilat\u00e9ral (attention aux angles) Modifier le code pour cr\u00e9er un pentagone r\u00e9gulier En utilisant une variable \"n\" contenant le nombre de c\u00f4t\u00e9s de notre figure, modifier le programme afin de dessiner un polygone r\u00e9gulier \u00e0 n c\u00f4t\u00e9s","title":"4. Boucles"},{"location":"boucles/#4-boucles","text":"Pour faire votre carr\u00e9, vous avez d\u00fb r\u00e9p\u00e9ter 4 fois la m\u00eame op\u00e9ration : \"avance de 100 et tourne \u00e0 gauche de 90\u00b0\". Pour simplifier le code, on va cr\u00e9er une boucle : on indique \u00e0 la machine qu'elle va r\u00e9p\u00e9ter n fois la m\u00eame suite d'op\u00e9rations. En Python, comme dans la plupart des langages de programmation, la boucle la plus commune est la boucle \"Pour\", en anglais \"For\". Essayez le code suivant : for _ in range(10): print(\"Hello!\") Dans le cas de notre carr\u00e9, nous aurons ceci : for _ in range(4): franklin.forward(100) franklin.left(90) Description : - \"for\" = d\u00e9but de la boucle \"pour\" - le symbole \"_\" signifie qu'on n'a pas besoin d'utiliser le compteur - range(4) : on utilise un ensemble de 4 \u00e9l\u00e9ments, donc on effectuera 4 tours - notez les \":\" \u00e0 la fin de la ligne - les lignes suivantes sont d\u00e9cal\u00e9es par une indentation : c'est un bloc d'instructions - toutes les lignes d\u00e9cal\u00e9es (indent\u00e9es) seront r\u00e9p\u00e9t\u00e9es dans la boucle. D\u00e8s qu'une ligne n'est plus indent\u00e9e, on sera sorti de la boucle.","title":"4. Boucles"},{"location":"boucles/#defi","text":"\u00c0 l'aide d'une boucle, cr\u00e9er un triangle \u00e9quilat\u00e9ral (attention aux angles) Modifier le code pour cr\u00e9er un pentagone r\u00e9gulier En utilisant une variable \"n\" contenant le nombre de c\u00f4t\u00e9s de notre figure, modifier le programme afin de dessiner un polygone r\u00e9gulier \u00e0 n c\u00f4t\u00e9s","title":"D\u00e9fi"},{"location":"depart/","text":"1. Environnement de travail En ligne : utiliser Repl.it Il est recommand\u00e9 de cr\u00e9er un compte afin de conserver les projets. Nous allons cr\u00e9er un projet utilisant la derni\u00e8re version de Python, et la biblioth\u00e8que Turtle. Cette biblioth\u00e8que constitue un ensemble d\u2019instructions qui permettent de programmer une \u00ab tortue \u00bb sous Python, en lui donnant des instructions de d\u00e9placement et de trac\u00e9, comme si on pilotait un robot avec un crayon. Cr\u00e9er un nouveau projet en cliquant sur le bouton \u00ab New repl \u00bb, puis choisir \u00ab Python (with Turtle) \u00bb. Dans la zone de gauche, vous tapez votre code, et dans la zone de droite, apr\u00e8s avoir appuy\u00e9 sur le bouton vert \u00ab run \u00bb, vous voyez s\u2019afficher le r\u00e9sultat.","title":"1. D\u00e9part"},{"location":"depart/#1-environnement-de-travail","text":"En ligne : utiliser Repl.it Il est recommand\u00e9 de cr\u00e9er un compte afin de conserver les projets. Nous allons cr\u00e9er un projet utilisant la derni\u00e8re version de Python, et la biblioth\u00e8que Turtle. Cette biblioth\u00e8que constitue un ensemble d\u2019instructions qui permettent de programmer une \u00ab tortue \u00bb sous Python, en lui donnant des instructions de d\u00e9placement et de trac\u00e9, comme si on pilotait un robot avec un crayon. Cr\u00e9er un nouveau projet en cliquant sur le bouton \u00ab New repl \u00bb, puis choisir \u00ab Python (with Turtle) \u00bb. Dans la zone de gauche, vous tapez votre code, et dans la zone de droite, apr\u00e8s avoir appuy\u00e9 sur le bouton vert \u00ab run \u00bb, vous voyez s\u2019afficher le r\u00e9sultat.","title":"1. Environnement de travail"},{"location":"dessin/","text":"2. Faire dessiner la tortue Il faut d\u2019abord importer la biblioth\u00e8que : import turtle Nous allons maintenant \"instancier\" une tortue, c'est-\u00e0-dire en cr\u00e9er une nouvelle (et lui donner un nom). Et parce que c'est une tortue, appelons-la \"franklin\" (je ne vais pas mettre de majuscules). franklin = turtle.Turtle() Maintenant, je peux donner des instructions \u00e0 Franklin : franklin.forward(100) Je peux la faire tourner de 90\u00b0 sur la gauche (sur SA gauche) puis avancer de nouveau : franklin.left(90) franklin.forward(100) Exercice Faire tracer un carr\u00e9 \u00e0 votre tortue. Bonus : vous pouvez changer l'\u00e9paisseur du trait avec l'instruction turtle.width(...) , ou la couleur turtle.color(...) Variante : modifier le code pour faire dessiner un rectangle.","title":"2. Dessiner"},{"location":"dessin/#2-faire-dessiner-la-tortue","text":"Il faut d\u2019abord importer la biblioth\u00e8que : import turtle Nous allons maintenant \"instancier\" une tortue, c'est-\u00e0-dire en cr\u00e9er une nouvelle (et lui donner un nom). Et parce que c'est une tortue, appelons-la \"franklin\" (je ne vais pas mettre de majuscules). franklin = turtle.Turtle() Maintenant, je peux donner des instructions \u00e0 Franklin : franklin.forward(100) Je peux la faire tourner de 90\u00b0 sur la gauche (sur SA gauche) puis avancer de nouveau : franklin.left(90) franklin.forward(100)","title":"2. Faire dessiner la tortue"},{"location":"dessin/#exercice","text":"Faire tracer un carr\u00e9 \u00e0 votre tortue. Bonus : vous pouvez changer l'\u00e9paisseur du trait avec l'instruction turtle.width(...) , ou la couleur turtle.color(...) Variante : modifier le code pour faire dessiner un rectangle.","title":"Exercice"},{"location":"fonctions/","text":"5. Fonctions Pour dessiner un polygone, j'ai utilis\u00e9 un ensemble d'instructions. Si je donnais un nom \u00e0 cette suite d'instructions ? C'est ce qu'on appelle une fonction. En Python, on donne un nom \u00e0 notre fonction, et on commence sa description par le petit mot def . def carre(): for _ in range(4): franklin.forward(100) franklin.left(90) Puis on fait appel \u00e0 notre fonction en l'appelant par son nom : carre() Notez les parenth\u00e8ses : pour l'instant, elles sont vides. Mais si je veux cr\u00e9er la fonction qui dessine un polygone \u00e0 n faces, je dois pr\u00e9ciser le nombre de faces. C'est un \"param\u00e8tre\" pour ma fonction. Et c'est \u00e0 l'int\u00e9rieur des parenth\u00e8ses que je l'indique : def polygone(n): for _ in range(n): ... D\u00e9fi 1 Cr\u00e9er une fonction \"polygone\" qui dessine un polygone r\u00e9gulier \u00e0 n faces D\u00e9fi 2 \u00c9crire un programme qui fasse dessiner un nid d'abeilles comme ceci :","title":"5. Fonctions"},{"location":"fonctions/#5-fonctions","text":"Pour dessiner un polygone, j'ai utilis\u00e9 un ensemble d'instructions. Si je donnais un nom \u00e0 cette suite d'instructions ? C'est ce qu'on appelle une fonction. En Python, on donne un nom \u00e0 notre fonction, et on commence sa description par le petit mot def . def carre(): for _ in range(4): franklin.forward(100) franklin.left(90) Puis on fait appel \u00e0 notre fonction en l'appelant par son nom : carre() Notez les parenth\u00e8ses : pour l'instant, elles sont vides. Mais si je veux cr\u00e9er la fonction qui dessine un polygone \u00e0 n faces, je dois pr\u00e9ciser le nombre de faces. C'est un \"param\u00e8tre\" pour ma fonction. Et c'est \u00e0 l'int\u00e9rieur des parenth\u00e8ses que je l'indique : def polygone(n): for _ in range(n): ...","title":"5. Fonctions"},{"location":"fonctions/#defi-1","text":"Cr\u00e9er une fonction \"polygone\" qui dessine un polygone r\u00e9gulier \u00e0 n faces","title":"D\u00e9fi 1"},{"location":"fonctions/#defi-2","text":"\u00c9crire un programme qui fasse dessiner un nid d'abeilles comme ceci :","title":"D\u00e9fi 2"},{"location":"variables/","text":"3. Variables On appelle \"variable\" une donn\u00e9e enregistr\u00e9e en m\u00e9moire dans le programme, \u00e0 laquelle on donne un nom. Exemple : longueur = 100 Ici, on a enregistr\u00e9 la valeur \"100\" dans la variable \"longueur\". On peut ensuite r\u00e9utiliser cette donn\u00e9e dans notre programme : franklin.forward(longeur) L'int\u00e9r\u00eat : si on veut choisir la longueur du c\u00f4t\u00e9 de notre carr\u00e9, on enregistre cette longueur \u00e0 un seul endroit dans notre programme, et la r\u00e9utilise \u00e0 plusieurs endroits. Certes, notre code est court, mais dans le cas d'un code plus complexe, vous comprenez l'int\u00e9r\u00eat ! Exercice Modifier le code du carr\u00e9 pour donner une variable \"longueur\" pour la longueur du c\u00f4t\u00e9 du carr\u00e9. Pro tip : Je peux bien s\u00fbr cr\u00e9er plusieurs variables : longueur = 100 largeur = 50 et je peux m\u00eame les assigner en une seule ligne : longueur, largeur = 100, 50","title":"3. Variables"},{"location":"variables/#3-variables","text":"On appelle \"variable\" une donn\u00e9e enregistr\u00e9e en m\u00e9moire dans le programme, \u00e0 laquelle on donne un nom. Exemple : longueur = 100 Ici, on a enregistr\u00e9 la valeur \"100\" dans la variable \"longueur\". On peut ensuite r\u00e9utiliser cette donn\u00e9e dans notre programme : franklin.forward(longeur) L'int\u00e9r\u00eat : si on veut choisir la longueur du c\u00f4t\u00e9 de notre carr\u00e9, on enregistre cette longueur \u00e0 un seul endroit dans notre programme, et la r\u00e9utilise \u00e0 plusieurs endroits. Certes, notre code est court, mais dans le cas d'un code plus complexe, vous comprenez l'int\u00e9r\u00eat !","title":"3. Variables"},{"location":"variables/#exercice","text":"Modifier le code du carr\u00e9 pour donner une variable \"longueur\" pour la longueur du c\u00f4t\u00e9 du carr\u00e9. Pro tip : Je peux bien s\u00fbr cr\u00e9er plusieurs variables : longueur = 100 largeur = 50 et je peux m\u00eame les assigner en une seule ligne : longueur, largeur = 100, 50","title":"Exercice"}]}